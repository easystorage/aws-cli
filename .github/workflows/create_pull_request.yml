on: push
# pull_request:
#   branches:
#     - staging
#   types:
#     - closed

jobs:
  create_pull_request_to_production:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged
    steps:
      - uses: actions/github-script@0.8.0
        with:
          script: |
            console.log('hello')
            # const staging_pull_request = await github.pulls.get({
            #   owner: 'easystorage',
            #   repo: 'aws-cli',
            #   number: 37
            # })
            # console.log(staging_pull_request.assignees)
            # const production_pull_request = await github.pulls.get({
            #   owner: 'easystorage',
            #   repo: 'aws-cli',
            #   number: 38
            # })
            # github.issues.addAssignees({
            #   owner: 'easystorage',
            #   repo: 'aws-cli',
            #   number: 38
            #   assignees: staging_pull_request.assignees
            # }).then(({ data, headers, status }) => {
            #   console.log('Assignees', 'data', data, 'headers', headers, 'status', status)
            # }).catch(({ resource, status, error }) => {
            #   console.log('The assignee error is', error.message)
            # })

            # # const staging_pull_request = context.payload.pull_request
            # # let head = staging_pull_request.head.ref
            # # head = 'staging'
            # # github.pulls.create({
            # #   owner: context.repo.owner,
            # #   repo: context.repo.repo,
            # #   title: staging_pull_request.title.replace(/deploy to staging/i, 'Deploy to Production'),
            # #   head: head,
            # #   base: 'master',
            # #   body: staging_pull_request.body
            # # }).then(({ data, headers, status }) => {
            # #   let production_pull_request = data
            # #   github.pulls.createReviewRequest({
            # #     owner: context.repo.owner,
            # #     repo: context.repo.repo,
            # #     pull_number: production_pull_request.number,
            # #     reviewers: ['custombitbot']
            # #   }).then(({ data, headers, status }) => {
            # #     console.log('Created ReviewRequest', 'data', data, 'headers', headers, 'status', status)
            # #   }).catch(({ resource, status, error }) => {
            # #     console.log('The ReviewRequest error', error.message)
            # #   })
            # #   console.log(staging_pull_request.assignees)
            # #   github.issues.addAssignees({
            # #     owner: context.repo.owner,
            # #     repo: context.repo.repo,
            # #     issue_number: production_pull_request.number,
            # #     assignees: staging_pull_request.assignees
            # #   }).then(({ data, headers, status }) => {
            # #     console.log('Assignees', 'data', data, 'headers', headers, 'status', status)
            # #   }).catch(({ resource, status, error }) => {
            # #     console.log('The assignee is', error.message)
            # #   })
            # # }).catch(({ resource, status, error }) => {
            # #   console.log('The error is', error.message)
            # # })
